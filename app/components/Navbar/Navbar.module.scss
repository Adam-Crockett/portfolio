.navbar {
  padding-top: 3rem;
  overflow: hidden;
}

.hamburgerMenu {
  display: none;
}
.buttonWrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--primary-white);
  padding-top: 1rem;
  padding-bottom: 1rem;

  a {
    cursor: pointer;
    border: none;
    width: 100%;
    color: var(--primary-black);
    background-color: var(--primary-white);
    height: 3rem;
    padding: 0 1rem 0 1rem;
    border-top: 1px solid var(--primary-black);
    text-decoration: none;
    text-align: center;
    line-height: 3rem;
    transition: color 0.2s ease-in-out;
  }

  a:hover {
    color: var(--primary-white);
    border-top: 1px solid var(--primary-red);
  }

  a:hover + a {
    border-top: 1px solid var(--primary-red);
  }
  a:first-of-type,
  a:first-of-type:hover {
    border-top: none;
  }
}

.footerWrapper {
  display: none;
}

.first {
  animation-delay: 1s;
}
.second {
  animation-delay: 0.9s;
}
.third {
  animation-delay: 0.8s;
}
.forth {
  animation-delay: 0.7s;
}
.fifth {
  animation-delay: 0.6s;
}
.sixth {
  animation-delay: 0.5s;
}

/* Sweep To Right */
.hvrSweepToRight {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
}
.hvrSweepToRight:before {
  content: '';
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--primary-red);
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 0 50%;
  transform-origin: 0 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvrSweepToRight:hover,
.hvrSweepToRight:focus,
.hvrSweepToRight:active {
  color: white;
}
.hvrSweepToRight:hover:before,
.hvrSweepToRight:focus:before,
.hvrSweepToRight:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

@media (max-width: 768px), (max-height: 480px) {
  .navbar {
    padding-top: 0;
    height: 5rem;
    width: 100%;
    display: flex;
    justify-content: center;
    background-color: var(--primary-white);
    animation: none;
  }
  .buttonWrapper {
    overflow: hidden;
    top: 3rem;
    position: absolute;
    right: 100%;
    transition: right 0.5s ease-in-out;
    padding: 0.5rem 1rem;
    padding-top: calc(var(--hamgurger-height) + var(--bar-margin) + 1rem);
    width: 100vw;
    height: 100vh;
    justify-content: flex-start;
    a {
      animation: none;
    }
  }

  .footerWrapper {
    display: block;
  }

  .hamburgerMenu {
    --x-width: calc(var(--hamburger-height) * var(--square-root-2));
    display: flex;
    flex-direction: column;
    gap: var(--bar-gap);
    width: max-content;
    position: absolute;
    top: var(--bar-margin);
    right: var(--bar-margin);
    z-index: 2;
    cursor: pointer;

    &::before,
    &::after,
    input {
      content: '';
      width: var(--bar-width);
      height: var(--bar-height);
      background-color: var(--primary-grey);
      border-radius: 9999px;
      transform-origin: left center;
      transition: opacity var(--bar-animation-timing),
        width var(--bar-animation-timing), rotate var(--bar-animation-timing),
        translate var(--bar-animation-timing);
    }

    input {
      appearance: none;
      padding: 0;
      margin: 0;
      outline: none;
      pointer-events: none;
    }

    &:has(input:checked)::before {
      rotate: 45deg;
      width: var(--x-width);
      translate: 0 calc(var(--bar-height) / -2);
    }
    &:has(input:checked)::after {
      rotate: -45deg;
      width: var(--x-width);
      translate: 0 calc(var(--bar-height) / 2);
    }

    input:checked {
      opacity: 0;
      width: 0;
    }

    &:has(input:focus-visible)::before,
    &:has(input:focus-visible)::after,
    input:focus-visible {
      border: 1px solid var(--primary-white);
      box-shadow: 0 0 0 1px var(--primary-black);
    }
  }

  .hamburgerMenu:has(input:checked) + .buttonWrapper {
    display: flex;
    translate: 0;
    right: 0;
  }
}
